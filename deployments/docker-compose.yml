
services:
  booking_server:
    env_file:
    - ../BookingService/.env.dev
    - ../BookingService/deployments/.env
    networks:
      - app-network
    build:
      context: ../BookingService
      dockerfile: ../BookingService/deployments/Dockerfile
    container_name: booking-server
    ports:
      - "${SERVER_EXTERNAL_PORT}:${SERVER_INTERNAL_PORT}"
    depends_on:
      - booking_db
    restart: always

  booking_db:
    env_file:
      - ../BookingService/.env.dev
      - ../BookingService/deployments/.env
    networks:
      - app-network
    image: postgres:14
    container_name: booking-db
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_INTERNAL_PORT}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      HOTELIER_SERVICE_HOST: ${HOTEL_SERVICE_HOST}
      HOTELIER_SERVICE_GRPC_PORT: ${HOTEL_SERVICE_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  hotelier-service:
    networks:
      - app-network
    build:
      #context: D:\hotel-service-go
      context: ..
      dockerfile: hotelier-service/hotelier-service/Dockerfile
    ports:
      - "8082:8080"
      - "50051:50051"  #  gRPC

    volumes:
      - ../configs:/app/configs
    environment:
      - CONFIG_PATH=/app/configs/hotelier-configs.yaml
    depends_on:
      - database

  database:
    networks:
      - app-network
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: hotelier
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:
  postgres_data:

networks:
  app-network:
    external: true
